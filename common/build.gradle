plugins {
    id "com.jfrog.bintray"
    id "java"
    id "java-library"
    id "maven-publish"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "io.github.lxgaming"
archivesBaseName = "servermanager-common"
version = version

configurations {
    provided {
        compile.extendsFrom(provided)
    }

    compileJava.dependsOn(":api:build")
}

repositories {
    jcenter()
}

dependencies {
    api(project(path: ":api"))
    provided("redis.clients:jedis:${jedisVersion}")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    publications = ["mavenPublication"]
    pkg {
        repo = "maven"
        name = "ServerManager"
        licenses = ["Apache-2.0"]
        vcsUrl = "https://github.com/LXGaming/ServerManager.git"
        publish = true
        version {
            name = project.version
            released = new Date()
        }
    }
}

bintrayUpload {
    onlyIf { System.getenv("BINTRAY_KEY") != null }
    onlyIf { System.getenv("BINTRAY_USER") != null }
    onlyIf { System.getenv("TRAVIS_BUILD_NUMBER") != null }
    onlyIf { System.getenv("TRAVIS_JOB_NUMBER") ==~ /\d+\.1$/ }
    onlyIf { System.getenv("TRAVIS_PULL_REQUEST") == "false" }
}

jar {
    from {
        (configurations.compile - configurations.provided).findAll({
            it.isDirectory() || it.name.endsWith(".jar")
        }).collect({
            it.isDirectory() ? it : zipTree(it)
        })
    }
}

javadoc {
    failOnError = false
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version version
            artifact javadocJar
            artifact sourcesJar
        }
    }
}